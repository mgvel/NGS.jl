#!/usr/bin/env julia

using ParallelAccelerator

cons = ARGS[1] # Consensus file e.g: chr3.sm.tsv.gz
vcf  = ARGS[2] # Variant Calling file e.g: chr3.vcf.gz

include("../src/read.jl")

"""
Read Consensus files generated by running consensus.jl
Looking for variants present in  atleast 10% of the samples
and returns the list of Variant positions
"""
@acc function readConsensus(cons)
	conslist = []
	lines = read(cons)
	for line in lines[2:end]
		cols = split(line, '\t')
		percent = parse(Float64, cols[2])
		if percent >= 10
			push!(conslist, parse(Int, cols[1]))
		end
	end
	return conslist
end

conslist = readConsensus(cons)

"""
Reading VCF files and comparing each position with positions
retrieved from previous function checking for consensus
and returning filtered variants in .vcf format
"""
	function readVCF(vcf_path, conslist)
		lines = read(vcf_path)
		println(lines[1])

		for pos = conslist[1:end], line = lines[2:end]
			snp = parse(Int, split(line, '\t')[2])
			if pos == snp
				println(line)
			end
		end
	end
end

readVCF(vcf, conslist)
